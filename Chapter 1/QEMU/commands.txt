.\qemu-img.exe resize .\ubunturv.img +10G

.\qemu-system-riscv64.exe -machine virt -cpu rv64 -m 2G -device virtio-blk-device,drive=hd -drive file=ubunturv.img,if=none,id=hd -device virtio-net-device,netdev=net -netdev user,id=net,hostfwd=tcp::2222-:22 -bios fw_jump.elf -kernel uboot.elf -append "root=LABEL=rootfs console=ttyS0" -nographic

./install/bin/qemu-system-riscv64 \ 
  -machine virt \
  -cpu rv64 \
  -m 2G \
  -device virtio-blk-device,drive=hd \
  -drive file=ubunturv.img,if=none,id=hd \
  -device virtio-net-device,netdev=net \
  -netdev user,id=net,hostfwd=tcp::2222-:22 \
  -bios /usr/lib/riscv64-linux-gnu/opensbi/generic/fw_jump.elf \
  -kernel /usr/lib/u-boot/qemu-riscv64_smode/uboot.elf \
  -object rng-random,filename=/dev/urandom,id=rng \
  -device virtio-rng-device,rng=rng \
  -append "root=LABEL=rootfs console=ttyS0" \
  -nographic

------------------
# Working solution

https://canonical-ubuntu-boards.readthedocs-hosted.com/en/latest/how-to/qemu-riscv/

qemu-system-riscv64 \
    -machine virt -nographic -m 2048 -smp 4 \
    -kernel /usr/lib/u-boot/qemu-riscv64_smode/uboot.elf \
    -device virtio-net-device,netdev=eth0 -netdev user,id=eth0 \
    -device virtio-rng-pci \
    -drive file=ubuntu-24.04.2-preinstalled-server-riscv64.img,format=raw,if=virtio

riscv64-linux-gnu-as -o hello.o hello.s
riscv64-linux-gnu-ld -o hello hello.o
qemu-riscv64-static ./hello
qemu-riscv64-static -g 1234 ./hello & gdb-multiarch ./hello
(gdb) target remote :1234
(gdb) display /5i $pc
(gdb) nexti

./run-qemu.sh
ub bub
ctrl+a, x - exit

-------------

# Outdated, but maybe can be useful at some extent:
https://www.reddit.com/r/RISCV/comments/11r3m2y/fyi_steps_for_ubuntu_riscv64_running_on_qemu/
